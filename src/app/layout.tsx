/* eslint-disable react-hooks/exhaustive-deps */
"use client";
import "./globals.css";
import "global";
import { Inter } from "next/font/google";
import { ScrollContext } from "@/context/AppProvider";
import MenuComponent from "@/components/MenuComponent/MenuComponent";
import { useEffect, useState } from "react";
import RollTop from "@/components/RollTop";
import ChatRoll from "@/components/ChatRoll";
import ChangeLanguage from "@/components/ChangeLanguage/ChangeLanguage";
import FooterComponent from "@/components/FooterComponent/FooterComponent";

const inter = Inter({ subsets: ["vietnamese"] });
import { usePathname } from "next/navigation";
import AlertOne from "@/util/Alert/AlertOne";

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const [reponsiveMobile, setReponsiveMobile] = useState<number>(0);
  useEffect(() => {
    window.addEventListener("load", () => {
      setReponsiveMobile(window.innerWidth);
    });
    window.addEventListener("resize", () => {
      setReponsiveMobile(window.innerWidth);
    });
  }, [reponsiveMobile]);
  const pathname = usePathname();
  const allowedPath = [
    "/candidate/login",
    "/candidate/sign-up",
    "/candidate/reset-password",
    "/candidate/forgot-password",
    "/candidate/cofirm-password",
    "/candidate/page-error",
    "/recruiter/login",
    "/recruiter/register",
    "/recruiter/forgot-password",
    "/login",
  ];

  const urlCustom = pathname.split("/").slice(0, -1).join("/");
  return (
    <html lang="en">
      <body suppressHydrationWarning={true} className={inter.className}>
        <ScrollContext>
          {pathname.split("/").length <= 3
            ? !allowedPath.includes(pathname) && <MenuComponent />
            : !(urlCustom.trim() === "/candidate/reset-password") && (
                <MenuComponent />
              )}
          {/* Alternatively, you can use curly braces */}
          {/* {router.pathname !== "/login" && <MenuComponent />} */}
          {/* <div>nice</div> */}
          {children}
          {reponsiveMobile >= 1280 ? (
            <>
              <ChangeLanguage />
              <ChatRoll />
              <RollTop />
            </>
          ) : (
            ""
          )}
          <AlertOne />
          {pathname.split("/").length <= 3
            ? !allowedPath.includes(pathname) && <FooterComponent />
            : !(urlCustom.trim() === "/candidate/reset-password") && (
                <FooterComponent />
              )}
        </ScrollContext>
      </body>
    </html>
  );
}
